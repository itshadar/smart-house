"""sqlalchemy migration222

Revision ID: 21a9cd69592a
Revises: a64235bf4642
Create Date: 2023-10-18 11:05:51.503763

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "21a9cd69592a"
down_revision: Union[str, None] = "a64235bf4642"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.execute('DROP TYPE IF EXISTS devicestatus;')
    # op.execute('DROP TYPE IF EXISTS devicetype;')

    op.create_table(
        "electronicdevice",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False, unique=True),
        sa.Column("location", sa.String(), nullable=True),
        sa.Column(
            "status",
            sa.Enum("ON", "OFF", name="devicestatus"),
            nullable=False,
            server_default="OFF",
        ),
        sa.Column(
            "type",
            sa.Enum("TV", "MICROWAVE", "AIRCONDITIONER", "OTHER", name="devicetype"),
            nullable=False,
            server_default="OTHER",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "airconditioner",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("degrees", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["electronicdevice.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "microwave",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("degrees", sa.Integer(), nullable=False),
        sa.Column("timer", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["electronicdevice.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "tv",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("channel", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["electronicdevice.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    pass


def upgrade1() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("DROP TYPE IF EXISTS devicestatus;")
    op.execute("DROP TYPE IF EXISTS devicetype;")

    op.create_table(
        "electronicdevice",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=32), nullable=False),
        sa.Column("location", sa.String(length=32), nullable=True),
        sa.Column("status", sa.Enum("ON", "OFF", name="devicestatus"), nullable=True),
        sa.Column(
            "type",
            sa.Enum("TV", "MICROWAVE", "AIRCONDITIONER", "OTHER", name="devicetype"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "airconditioner",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("degrees", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["electronicdevice.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "microwave",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("degrees", sa.Integer(), nullable=False),
        sa.Column("timer", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["id"],
            ["electronicdevice.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "tv",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("channel", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["electronicdevice.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("tv")
    op.drop_table("microwave")
    op.drop_table("airconditioner")
    op.drop_table("electronicdevice")
    op.execute("DROP TYPE IF EXISTS devicestatus;")
    op.execute("DROP TYPE IF EXISTS devicetype;")

    # ### end Alembic commands ###
