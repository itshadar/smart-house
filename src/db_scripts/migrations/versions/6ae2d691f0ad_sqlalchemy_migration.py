"""sqlalchemy migration

Revision ID: 6ae2d691f0ad
Revises: 05f466fb9660
Create Date: 2023-10-18 10:48:38.340770

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "6ae2d691f0ad"
down_revision: Union[str, None] = "05f466fb9660"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("airconditioner")
    op.drop_table("microwave")
    op.drop_table("tv")
    op.drop_table("electronicdevice")

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "tv",
        sa.Column("id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("channel", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(["id"], ["electronicdevice.id"], name="tv_id_fkey"),
        sa.PrimaryKeyConstraint("id", name="tv_pkey"),
    )
    op.create_table(
        "microwave",
        sa.Column("id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("degrees", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("timer", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["id"], ["electronicdevice.id"], name="microwave_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="microwave_pkey"),
    )
    op.create_table(
        "airconditioner",
        sa.Column("id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("degrees", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["id"], ["electronicdevice.id"], name="airconditioner_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="airconditioner_pkey"),
    )
    op.create_table(
        "electronicdevice",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("location", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column(
            "status",
            postgresql.ENUM("ON", "OFF", name="devicestatus"),
            server_default=sa.text("'OFF'::devicestatus"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "type",
            postgresql.ENUM(
                "TV", "MICROWAVE", "AIRCONDITIONER", "OTHER", name="devicetype"
            ),
            server_default=sa.text("'OTHER'::devicetype"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name="electronicdevice_pkey"),
        sa.UniqueConstraint("name", name="electronicdevice_name_key"),
    )
    # ### end Alembic commands ###
